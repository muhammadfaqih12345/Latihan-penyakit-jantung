# -*- coding: utf-8 -*-
"""Untitled65.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XUJbM_oviXwMW6tf5EeWtdWWu_M4QUKm
"""

import streamlit as st
import joblib
import numpy as np

# Load model (ubah path sesuai file model Anda)
model = joblib.load("penyakit_jantung_koroner.sav")

st.title("Prediksi Penyakit Jantung Koroner")

st.markdown("""
### ðŸ“‹ Deskripsi Atribut
1. **Usia (age)**: Usia pasien dalam tahun (1â€“120)
2. **Jenis Kelamin (gender)**: 0 = Perempuan, 1 = Laki-laki
3. **Tipe Nyeri Dada (chestpain)**:
   0 = Typical angina
   1 = Atypical angina
   2 = Non-anginal pain
   3 = Asymptomatic
4. **Tekanan Darah Saat Istirahat (restingBP)**: mmHg (94â€“200)
5. **Kadar Kolesterol Serum (serumcholestrol)**: mg/dl (126â€“564)
6. **Gula Darah Puasa (fastingbloodsugar)**: 0 = Tidak, 1 = Ya
7. **Hasil EKG Saat Istirahat (restingrelectro)**:
   0 = Normal
   1 = ST-T wave abnormality
   2 = Left ventricular hypertrophy
8. **Denyut Jantung Maksimal (maxheartrate)**: 71â€“202
9. **Angina Induksi Olahraga (exerciseangia)**: 0 = Tidak, 1 = Ya
10. **Oldpeak (oldpeak)**: 0.0 â€“ 6.2
11. **Kemiringan Segmen ST (slope)**:
    1 = Upsloping
    2 = Flat
    3 = Downsloping
12. **Jumlah Pembuluh Darah Utama (noofmajorvessels)**: 0 â€“ 3
""")

# Input dengan validasi
age = st.number_input("Usia (age)", min_value=1, max_value=120, step=1)
gender = st.selectbox("Jenis Kelamin (gender)", options=[0, 1], format_func=lambda x: "Laki-laki" if x == 1 else "Perempuan")
chestpain = st.selectbox("Tipe Nyeri Dada (chestpain)", options=[0, 1, 2, 3],
                         format_func=lambda x: ["Typical angina", "Atypical angina", "Non-anginal pain", "Asymptomatic"][x])
restingBP = st.number_input("Tekanan Darah Saat Istirahat (restingBP)", min_value=94, max_value=200, step=1)
serumcholestrol = st.number_input("Kadar Kolesterol Serum (serumcholestrol)", min_value=126, max_value=564, step=1)
fastingbloodsugar = st.selectbox("Gula Darah Puasa (fastingbloodsugar)", options=[0, 1], format_func=lambda x: "Ya" if x == 1 else "Tidak")
restingrelectro = st.selectbox("Hasil EKG Saat Istirahat (restingrelectro)", options=[0, 1, 2],
                               format_func=lambda x: ["Normal", "ST-T wave abnormality", "Left ventricular hypertrophy"][x])
maxheartrate = st.number_input("Denyut Jantung Maksimal (maxheartrate)", min_value=71, max_value=202, step=1)
exerciseangia = st.selectbox("Angina Induksi Olahraga (exerciseangia)", options=[0, 1], format_func=lambda x: "Ya" if x == 1 else "Tidak")
oldpeak = st.number_input("Oldpeak (Depresi Segmen ST)", min_value=0.0, max_value=6.2, step=0.1, format="%.1f")
slope = st.selectbox("Kemiringan Segmen ST (slope)", options=[1, 2, 3], format_func=lambda x: ["Upsloping", "Flat", "Downsloping"][x-1])
noofmajorvessels = st.selectbox("Jumlah Pembuluh Darah Utama (noofmajorvessels)", options=[0, 1, 2, 3])

# Tombol prediksi
if st.button("Prediksi"):
    # Gabungkan input
    input_data = np.array([[age, gender, chestpain, restingBP, serumcholestrol,
                            fastingbloodsugar, restingrelectro, maxheartrate,
                            exerciseangia, oldpeak, slope, noofmajorvessels]])

    # Prediksi
    prediction = model.predict(input_data)[0]

    if prediction == 1:
        st.error("âš  Pasien terkena penyakit jantung koroner")
    else:
        st.success("âœ… Pasien TIDAK terkena penyakit jantung koroner")